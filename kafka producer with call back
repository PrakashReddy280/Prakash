
package Prakash.kafka;

import org.apache.kafka.clients.producer.*;
import org.apache.kafka.common.serialization.StringSerializer;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Properties;

public class producer {

    public static void main(String[] args) {
        final Logger logger= LoggerFactory.getLogger(producer.class);

        String bootstrap="127.0.0.1:9092";
        //create producer properties
        Properties properties= new Properties();
        properties.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG,bootstrap);
        properties.setProperty(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());
        properties.setProperty(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG,StringSerializer.class.getName());


        //create a producer

        KafkaProducer<String,String>producer=new KafkaProducer<String, String>(properties);
        //create a producer record
        for(int i=0;i<10;i++) {
            ProducerRecord<String, String> record = new ProducerRecord<String, String>("praki", ".hello Prakash"+Integer.toString(i));

            //send the data
            producer.send(record, new Callback() {
                public void onCompletion(RecordMetadata recordMetadata, Exception e) {
                    if (e == null) {
                        logger.info("Received metadata.\n" +
                                "Topic:" + recordMetadata.topic() + "\n" +
                                "partitions:" + recordMetadata.partition() + "\n" +
                                "offset:" + recordMetadata.offset() + "\n" +
                                "Timestamp:" + recordMetadata.timestamp());
                    } else {
                        logger.error("error while messaging", e);
                    }
                }
            });
        }
        producer.flush();
        producer.close();



    }
}
